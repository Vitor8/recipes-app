{"version":3,"sources":["context/RecipeAppContext.js","pages/Login.js","images/profileIcon.svg","images/searchIcon.svg","components/DrinksSearchBar.js","components/FoodsSearchBar.js","components/SearchBar.js","services/categoriesAPI.js","services/categoryAPI.js","components/CategoryButtons.js","components/Header.js","components/RecipeCards.js","images/drinkIcon.svg","images/exploreIcon.svg","images/mealIcon.svg","components/Footer.js","pages/Foods.js","pages/Drinks.js","services/getMealById.js","services/randomRecipe.js","components/RecipeDetailsButton.js","components/RenderFoodDetails.js","components/RenderFoodIngred.js","components/RenderFoodInstruction.js","components/RenderFoodVideo.js","components/RenderFoodRecomendation.js","pages/FoodsDetails.js","components/RenderDrinkDetails.js","components/RenderDrinkIngred.js","components/RenderDrinkInstruction.js","components/RenderDrinkRecomendation.js","pages/DrinksDetails.js","images/blackHeartIcon.svg","images/whiteHeartIcon.svg","images/shareIcon.svg","components/RenderFoodProgress.js","pages/FoodsRecipeInProgress.js","components/RenderDrinkProgress.js","pages/DrinksRecipeInProgress.js","pages/Explore.js","pages/ExploreFoods.js","pages/ExploreDrinks.js","pages/ExploreFoodsByIngredients.js","pages/ExploreDrinksByIngredients.js","pages/ExploreFoodsByArea.js","pages/Perfil.js","pages/RecipesDone.js","pages/FavoriteRecipes.js","pages/NotFound.js","routes/Routes.js","App.js","serviceWorker.js","provider/RecipeAppProvider.js","index.js"],"names":["RecipeAppContext","createContext","Login","useContext","handleChange","handleDisabled","email","className","htmlFor","id","name","type","onChange","e","to","onClick","emailStringfied","JSON","stringify","localStorage","setItem","submitCredentials","disabled","DrinksSearchBar","useState","searchText","setSearchText","input","setInput","setDrinksList","history","useHistory","requestDrinkEndpoint","text","a","endpoint","alertMsg","length","alert","fetch","response","json","drinks","push","idDrink","value","target","FoodsSearchBar","setFoodList","requestFoodEndpoint","meals","idMeal","SearchBar","foods","getCategories","endPoint","data","ok","Promise","resolve","reject","getCategory","CategoryButtons","setFoodCategory","setDrinkCategory","drinkCategoryList","foodCategoryList","setToggleOn","toggleOn","btnName","setBtnName","useEffect","getCategoriesFromAPI","drinkCategory","filterDrinkCategory","filterFoodCategory","renderAllButton","map","category","index","strCategory","renderDrinkCategoryButton","Header","title","icon","showSearchBar","setshowSearchBar","src","profileIcon","alt","searchIcon","RecipeCards","drinksList","foodsList","redirectToDetails","recipe","role","tabIndex","onKeyDown","strDrinkThumb","strDrink","height","width","strMealThumb","strMeal","Footer","drinkIcon","exploreIcon","mealIcon","Foods","then","results","Drinks","getMealById","randomRecipe","RecipeDetailsButton","inProgressRecipes","RenderFoodDetails","copyLink","shareIcon","bkHeart","meal","wtHeart","isFavRecipe","setIsFavRecipe","checkFavoriteMeal","saveFavoriteMeal","RenderFoodIngred","ingredList","ingredArray","Object","entries","filter","key","includes","forEach","item","createIngredArray","measureList","measureArray","createMeasuArray","ingred","RenderFoodInstruction","strInstructions","RenderFoodVideo","urlLink","strYoutube","youtubeVideoId","split","embeddedLink","frameBorder","allow","allowFullScreen","RenderFoodRecomendation","recomDrinkMap","recomDrink","copy","require","FoodsDetails","props","match","params","click","setClick","setMeal","setRecomDrink","setIsRecipeDone","isRecipeDone","setInProgressRecipes","getMealDetails","getRandomMeal","arrayDoneRecipe","currentMeal","inProgressRecipesLS","parse","getItem","DoneRecipesLS","checkedDoneRecipes","some","Number","checkedInProgressRecipes","InProgress","keys","recipeID","checkInRecipeInProgress","drinkId","RenderDrinkDetails","drink","saveFavoriteDrink","checkFavoriteDrink","strAlcoholic","RenderDrinkIngred","RenderDrinkInstruction","RenderDrinkRecomendation","recomMealMap","recomMeal","DrinksDetails","setDrink","setRecomMeal","cocktails","RenderFoodProgress","strArea","finalListIngredients","classNameIngredients","statusIngredients","statusEndRecipeButton","favoriteIcon","setFavoriteIcon","setHasChecked","setStatusIngredients","setClassNameIngredients","setCountCheckIngredList","countCheckIngredList","numberIngredients","setStatusEndRecipeButton","hasChecked","strTags","setFilteredRecipesDone","currentLocalStorage","newObject","whiteHeartIcon","blackHeartIcon","favoriteRecipes","newFavoriteRecipes","area","alcoholicOrNot","image","newFavRecipes","changeStatusIcon","finalList","ingredient","checked","event","currentStatusIngredients","prev","checkList","arrayTags","newRecipeDone","doneDate","tags","newRecipesDone","saveRecipeDoneInLocalStorage","FoodsRecipeInProgress","mealInProgress","setMealInProgress","loading","setIsLoading","setFinalListIngredients","setNumberIngredients","ingredListClass","arrayStatus","countYesChecked","statusIngredSaved","RenderDrinkProgress","DrinksRecipeInProgress","drinkInProgress","setDrinkInProgress","getDrinkDetails","Explore","ExploreFoods","shouldRedirect","setShouldRedirect","setIdMeal","fetchApiSurprise","ExploreDrinks","setIdDrink","ExploreFoodsByIngredients","isLoading","ingredients","setIngredients","shouldRedirectToPageFoods","setShouldRedirectToPageFoods","redirectToPageFood","console","log","fetchApi","strIngredient","ExploreDrinksByIngredients","shouldRedirectToPageDrinks","setShouldRedirectToPageDrinks","redirectToPageDrinks","strIngredient1","ExploreFoodsByArea","areas","setAreas","chosenArea","setChosenArea","recipesChosenArea","setRecipesChosenArea","options","allOption","renderDropDownAreas","Perfil","user","objUser","clear","RecipesDone","filterType","setFilterType","shouldRender","setShouldRender","filteredRecipesDone","localStorageRecipes","doneList","filteredList","filterRecipesDone","recipes","href","tag","indexTag","FavoriteRecipes","filteredFavoritesRecipes","setFilteredFavoritesRecipes","favList","filterFavoriteRecipes","deleteFavoriteRecipe","NotFound","Routes","exact","path","component","App","Boolean","window","location","hostname","RecipeAppProvider","children","password","login","setLogin","favRecipes","checkedRecipe","test","checkIsFavorited","newFavRecipe","newFavoriteRecipe","Provider","ReactDOM","render","StrictMode","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.671abd27.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst RecipeAppContext = createContext();\n\nexport default RecipeAppContext;\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport RecipeAppContext from '../context/RecipeAppContext';\nimport '../css/Login.css';\n\nfunction Login() {\n  const { handleChange, handleDisabled, email } = useContext(RecipeAppContext);\n\n  const submitCredentials = () => {\n    const emailStringfied = JSON.stringify({ email });\n    localStorage.setItem('mealsToken', 1);\n    localStorage.setItem('cocktailsToken', 1);\n    localStorage.setItem('user', emailStringfied);\n  };\n\n  return (\n    <div className=\"login\">\n      <p className=\"login-title\">Login</p>\n      <label htmlFor=\"email\">\n        Email\n        <input\n          id=\"email\"\n          name=\"email\"\n          type=\"email\"\n          data-testid=\"email-input\"\n          onChange={ (e) => handleChange(e) }\n          className=\"input-login\"\n        />\n      </label>\n      {' '}\n      <br />\n      <label htmlFor=\"password\">\n        Password\n        <input\n          id=\"password\"\n          name=\"password\"\n          type=\"password\"\n          data-testid=\"password-input\"\n          onChange={ (e) => handleChange(e) }\n          className=\"input-login\"\n        />\n      </label>\n      {' '}\n      <br />\n      <Link to=\"/comidas\">\n        <button\n          type=\"button\"\n          data-testid=\"login-submit-btn\"\n          onClick={ () => submitCredentials() }\n          disabled={ handleDisabled() }\n          className=\"button-login\"\n        >\n          Entrar\n        </button>\n      </Link>\n    </div>\n  );\n}\n\nexport default Login;\n","export default __webpack_public_path__ + \"static/media/profileIcon.44eb3608.svg\";","export default __webpack_public_path__ + \"static/media/searchIcon.7353564d.svg\";","import React, { useState, useContext } from 'react';\nimport { useHistory } from 'react-router';\nimport RecipeAppContext from '../context/RecipeAppContext';\n\nfunction DrinksSearchBar() {\n  const [searchText, setSearchText] = useState('');\n  const [input, setInput] = useState('');\n  const { setDrinksList } = useContext(RecipeAppContext);\n  const history = useHistory();\n\n  const requestDrinkEndpoint = async (text) => {\n    let endpoint = '';\n    const alertMsg = 'Sinto muito, não encontramos nenhuma receita para esses filtros.';\n    const oneCharacter = 'Sua busca deve conter somente 1 (um) caracter';\n\n    if (input === 'ingredient') endpoint = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${text}`;\n    if (input === 'name') endpoint = `https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${text}`;\n    if (input === 'firstLetter' && searchText.length > 1) return alert(oneCharacter);\n    if (input === 'firstLetter') endpoint = `https://www.thecocktaildb.com/api/json/v1/1/search.php?f=${text}`;\n    if (!input) return null;\n    const response = await fetch(endpoint);\n    const { drinks } = await response.json();\n    if (drinks === null) return alert(alertMsg);\n    if (drinks.length === 1) return history.push(`/bebidas/${drinks[0].idDrink}`);\n    setDrinksList(drinks);\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        data-testid=\"search-input\"\n        onChange={ ({ target: { value } }) => setSearchText(value) }\n      />\n      <br />\n\n      <div className=\"options-search-bar\">\n        <label htmlFor=\"ingredient\">\n          <input\n            type=\"radio\"\n            name=\"search-drinks\"\n            id=\"ingredient\"\n            value=\"ingredient\"\n            data-testid=\"ingredient-search-radio\"\n            onChange={ ({ target: { value } }) => setInput(value) }\n          />\n          Ingredientes\n        </label>\n\n        <label htmlFor=\"name\">\n          <input\n            type=\"radio\"\n            name=\"search-drinks\"\n            id=\"name\"\n            value=\"name\"\n            data-testid=\"name-search-radio\"\n            onChange={ ({ target: { value } }) => setInput(value) }\n          />\n          Nome\n        </label>\n\n        <label htmlFor=\"firstLetter\">\n          <input\n            type=\"radio\"\n            name=\"search-drinks\"\n            id=\"firstLetter\"\n            value=\"firstLetter\"\n            data-testid=\"first-letter-search-radio\"\n            onChange={ ({ target: { value } }) => setInput(value) }\n          />\n          Primeira letra\n        </label>\n      </div>\n\n      <button\n        type=\"button\"\n        data-testid=\"exec-search-btn\"\n        onClick={ () => requestDrinkEndpoint(searchText) }\n        className=\"button-search-bar\"\n      >\n        Buscar\n      </button>\n    </div>\n  );\n}\n\nexport default DrinksSearchBar;\n","import React, { useState, useContext } from 'react';\nimport { useHistory } from 'react-router';\nimport RecipeAppContext from '../context/RecipeAppContext';\n\nfunction FoodsSearchBar() {\n  const [searchText, setSearchText] = useState('');\n  const [input, setInput] = useState('');\n  const { setFoodList } = useContext(RecipeAppContext);\n  const history = useHistory();\n\n  const requestFoodEndpoint = async (text) => {\n    let endpoint = '';\n    const alertMsg = 'Sinto muito, não encontramos nenhuma receita para esses filtros.';\n    const oneCharacter = 'Sua busca deve conter somente 1 (um) caracter';\n\n    if (input === 'ingredient') endpoint = `https://www.themealdb.com/api/json/v1/1/filter.php?i=${text}`;\n    if (input === 'name') endpoint = `https://www.themealdb.com/api/json/v1/1/search.php?s=${text}`;\n    if (input === 'firstLetter' && searchText.length > 1) alert(oneCharacter);\n    if (input === 'firstLetter') endpoint = `https://www.themealdb.com/api/json/v1/1/search.php?f=${text}`;\n    if (!input || !searchText) return null;\n    const response = await fetch(endpoint);\n    const { meals } = await response.json();\n    if (meals === null) return alert(alertMsg);\n    if (meals.length === 1) return history.push(`/comidas/${meals[0].idMeal}`);\n    setFoodList(meals);\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        data-testid=\"search-input\"\n        onChange={ ({ target: { value } }) => setSearchText(value) }\n      />\n      <br />\n\n      <div className=\"options-search-bar\">\n        <label htmlFor=\"ingredient\">\n          <input\n            type=\"radio\"\n            name=\"search-foods\"\n            id=\"ingredient\"\n            value=\"ingredient\"\n            data-testid=\"ingredient-search-radio\"\n            onChange={ ({ target: { value } }) => setInput(value) }\n          />\n          Ingredientes\n        </label>\n\n        <label htmlFor=\"name\">\n          <input\n            type=\"radio\"\n            name=\"search-foods\"\n            id=\"name\"\n            value=\"name\"\n            data-testid=\"name-search-radio\"\n            onChange={ ({ target: { value } }) => setInput(value) }\n          />\n          Nome\n        </label>\n\n        <label htmlFor=\"firstLetter\">\n          <input\n            type=\"radio\"\n            name=\"search-foods\"\n            id=\"firstLetter\"\n            value=\"firstLetter\"\n            data-testid=\"first-letter-search-radio\"\n            onChange={ ({ target: { value } }) => setInput(value) }\n          />\n          Primeira letra\n        </label>\n      </div>\n\n      <button\n        type=\"button\"\n        data-testid=\"exec-search-btn\"\n        onClick={ () => requestFoodEndpoint(searchText) }\n        className=\"button-search-bar\"\n      >\n        Buscar\n      </button>\n    </div>\n  );\n}\n\nexport default FoodsSearchBar;\n","import React from 'react';\nimport '../css/Header.css';\nimport PropTypes from 'prop-types';\nimport DrinksSearchBar from './DrinksSearchBar';\nimport FoodsSearchBar from './FoodsSearchBar';\n\nfunction SearchBar({ drinks, foods }) {\n  return (\n    <div className=\"search-container\">\n      {drinks && <DrinksSearchBar />}\n      {foods && <FoodsSearchBar />}\n    </div>\n  );\n}\n\nexport default SearchBar;\n\nSearchBar.propTypes = {\n  drinks: PropTypes.bool.isRequired,\n  foods: PropTypes.bool.isRequired,\n};\n","const getCategories = async (endPoint) => {\n  const response = await fetch(endPoint);\n  const data = await response.json();\n  return response.ok ? Promise.resolve(data) : Promise.reject(data);\n};\n\nexport default getCategories;\n","const getCategory = async (endPoint) => {\n  const response = await fetch(endPoint);\n  const data = await response.json();\n  return response.ok ? Promise.resolve(data) : Promise.reject(data);\n};\n\nexport default getCategory;\n","import React, { useEffect, useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport getCategories from '../services/categoriesAPI';\nimport getCategory from '../services/categoryAPI';\nimport RecipeAppContext from '../context/RecipeAppContext';\nimport '../css/Header.css';\n\nfunction CategoryButtons({ foods, drinks }) {\n  const { setFoodCategory,\n    setDrinkCategory,\n    drinkCategoryList,\n    foodCategoryList,\n    setDrinksList,\n    setFoodList,\n    setToggleOn,\n    toggleOn,\n  } = useContext(RecipeAppContext);\n  const [btnName, setBtnName] = useState('');\n\n  useEffect(() => {\n    const foodCatEndpoint = 'https://www.themealdb.com/api/json/v1/1/list.php?c=list';\n    const drinkCatEndpoint = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list';\n    if (foods) {\n      const getCategoriesFromAPI = async () => {\n        const { meals } = await getCategories(foodCatEndpoint);\n        setFoodCategory(meals);\n      };\n      getCategoriesFromAPI();\n    } else if (drinks) {\n      const getCategoriesFromAPI = async () => {\n        const data = await getCategories(drinkCatEndpoint);\n        const drinkCategory = data.drinks;\n        setDrinkCategory(drinkCategory);\n      };\n      getCategoriesFromAPI();\n    }\n  }, []);\n\n  const filterDrinkCategory = async ({ target }) => {\n    const { name } = target;\n    const endpoint = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=${name}`;\n    if (!toggleOn) {\n      const data = await getCategory(endpoint);\n      setDrinksList(data.drinks);\n      setBtnName(name);\n      setToggleOn(true);\n    } if (toggleOn && name === btnName) {\n      setToggleOn(false);\n    } if (toggleOn && name !== btnName) {\n      const data = await getCategory(endpoint);\n      setDrinksList(data.drinks);\n      setBtnName(name);\n    }\n  };\n\n  const filterFoodCategory = async ({ target }) => {\n    const { name } = target;\n    const endpoint = `https://www.themealdb.com/api/json/v1/1/filter.php?c=${name}`;\n    if (!toggleOn) {\n      const data = await getCategory(endpoint);\n      setFoodList(data.meals);\n      setBtnName(name);\n      setToggleOn(true);\n    } if (toggleOn && name === btnName) {\n      setToggleOn(false);\n    } if (toggleOn && name !== btnName) {\n      const data = await getCategory(endpoint);\n      setFoodList(data.meals);\n      setBtnName(name);\n    }\n  };\n\n  const renderDrinkCategoryButton = (type) => {\n    const maxLength = 4;\n    const list = type.map((category, index) => {\n      if (index <= maxLength) {\n        return (\n          <button\n            type=\"button\"\n            key={ index }\n            name={ category.strCategory }\n            data-testid={ `${category.strCategory}-category-filter` }\n            onClick={ (e) => filterDrinkCategory(e) }\n            className=\"button-food\"\n          >\n            {`${category.strCategory}`}\n          </button>\n        );\n      }\n      return null;\n    });\n    return list;\n  };\n\n  const renderFoodCategoryButton = (type) => {\n    const maxLength = 4;\n    const list = type.map((category, index) => {\n      if (index <= maxLength) {\n        return (\n          <button\n            type=\"button\"\n            key={ index }\n            name={ category.strCategory }\n            data-testid={ `${category.strCategory}-category-filter` }\n            onClick={ (e) => filterFoodCategory(e) }\n            className=\"button-food\"\n          >\n            {`${category.strCategory}`}\n          </button>\n        );\n      }\n      return null;\n    });\n    return list;\n  };\n\n  const renderAllButton = () => (\n    <button\n      type=\"button\"\n      onClick={ () => setToggleOn(false) }\n      data-testid=\"All-category-filter\"\n      className=\"button-food\"\n    >\n      All\n    </button>\n  );\n\n  return (\n    <div className=\"category-buttons\">\n      {foods && renderAllButton()}\n      {foods && foodCategoryList && renderFoodCategoryButton(foodCategoryList)}\n      {drinks && renderAllButton()}\n      {drinks && drinkCategoryList && renderDrinkCategoryButton(drinkCategoryList)}\n    </div>\n  );\n}\n\nCategoryButtons.propTypes = {\n  foods: PropTypes.bool.isRequired,\n  drinks: PropTypes.bool.isRequired,\n};\n\nexport default CategoryButtons;\n","import React, { useState } from 'react';\nimport '../css/Header.css';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport profileIcon from '../images/profileIcon.svg';\nimport searchIcon from '../images/searchIcon.svg';\nimport SearchBar from './SearchBar';\nimport CategoryButtons from './CategoryButtons';\n\nfunction Header({ title, icon, drinks, foods }) {\n  const [showSearchBar, setshowSearchBar] = useState(false);\n\n  const renderSearchButtonIcon = () => (\n    <input\n      type=\"image\"\n      src={ searchIcon }\n      alt=\"icone de uma lupa\"\n      data-testid=\"search-top-btn\"\n      onClick={ () => setshowSearchBar(!showSearchBar) }\n    />\n  );\n\n  return (\n    <header>\n      <div className=\"header-container\">\n        <Link to=\"/perfil\">\n          <img src={ profileIcon } alt=\"Profile Icon\" data-testid=\"profile-top-btn\" />\n        </Link>\n        <h3 data-testid=\"page-title\" className=\"title-header\">{`${title}`}</h3>\n        {icon && renderSearchButtonIcon()}\n      </div>\n      {showSearchBar && <SearchBar drinks={ drinks } foods={ foods } />}\n      <CategoryButtons drinks={ drinks } foods={ foods } />\n    </header>\n  );\n}\n\nexport default Header;\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n  icon: PropTypes.bool.isRequired,\n  foods: PropTypes.bool.isRequired,\n  drinks: PropTypes.bool.isRequired,\n};\n","import React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport '../css/RecipeCards.css';\nimport RecipeAppContext from '../context/RecipeAppContext';\n\nfunction RecipeCards() {\n  const { drinksList, foodsList } = useContext(RecipeAppContext);\n  const history = useHistory();\n\n  const redirectToDetails = (id, foods, drinks) => {\n    if (foods) {\n      history.push(`/comidas/${id}`);\n    } if (drinks) {\n      history.push(`/bebidas/${id}`);\n    }\n  };\n\n  const renderDrinkCards = () => {\n    const maxLength = 11;\n    const list = drinksList.map((recipe, index) => {\n      if (index <= maxLength) {\n        return (\n          <div\n            className=\"card-container\"\n            data-testid={ `${index}-recipe-card` }\n            key={ recipe.idDrink }\n            role=\"link\"\n            tabIndex={ 0 }\n            onClick={ () => redirectToDetails(recipe.idDrink, false, true) }\n            onKeyDown={ () => redirectToDetails(recipe.idDrink, false, true) }\n          >\n            <img\n              src={ recipe.strDrinkThumb }\n              data-testid={ `${index}-card-img` }\n              alt={ `${recipe.strDrink}` }\n              height=\"50px\"\n              width=\"50px\"\n            />\n            <p\n              key={ recipe.idDrink }\n              data-testid={ `${index}-card-name` }\n              className=\"p-text\"\n            >\n              {recipe.strDrink}\n            </p>\n          </div>\n        );\n      }\n      return null;\n    });\n    return list;\n  };\n\n  const renderFoodCards = () => {\n    const maxLength = 11;\n    const list = foodsList.map((recipe, index) => {\n      if (index <= maxLength) {\n        return (\n          <div\n            className=\"card-container\"\n            data-testid={ `${index}-recipe-card` }\n            key={ recipe.idMeal }\n            role=\"link\"\n            tabIndex={ 0 }\n            onClick={ () => redirectToDetails(recipe.idMeal, true, false) }\n            onKeyDown={ () => redirectToDetails(recipe.idMeal, true, false) }\n          >\n            <img\n              src={ recipe.strMealThumb }\n              data-testid={ `${index}-card-img` }\n              alt={ `${recipe.strMeal}` }\n              height=\"50px\"\n              width=\"50px\"\n            />\n            <p\n              key={ recipe.idMeal }\n              data-testid={ `${index}-card-name` }\n              className=\"p-text\"\n            >\n              {recipe.strMeal}\n            </p>\n          </div>\n        );\n      }\n      return null;\n    });\n    return list;\n  };\n\n  return (\n    <div className=\"library-card-container\">\n      {drinksList && renderDrinkCards()}\n      {foodsList && renderFoodCards()}\n    </div>\n  );\n}\n\nexport default RecipeCards;\n","export default __webpack_public_path__ + \"static/media/drinkIcon.efc0d3c1.svg\";","export default __webpack_public_path__ + \"static/media/exploreIcon.07634623.svg\";","export default __webpack_public_path__ + \"static/media/mealIcon.40029e7f.svg\";","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport RecipeAppContext from '../context/RecipeAppContext';\nimport '../css/Footer.css';\nimport drinkIcon from '../images/drinkIcon.svg';\nimport exploreIcon from '../images/exploreIcon.svg';\nimport mealIcon from '../images/mealIcon.svg';\n\nfunction Footer() {\n  const { setFoodList, setDrinksList } = useContext(RecipeAppContext);\n  return (\n    <footer data-testid=\"footer\" className=\"footer\">\n\n      <Link to=\"/bebidas\" onClick={ () => setFoodList('') }>\n        <img\n          src={ drinkIcon }\n          alt=\"drinks page\"\n          data-testid=\"drinks-bottom-btn\"\n        />\n      </Link>\n\n      <Link to=\"/explorar\">\n        <img src={ exploreIcon } alt=\"explore page\" data-testid=\"explore-bottom-btn\" />\n      </Link>\n\n      <Link to=\"/comidas\" onClick={ () => setDrinksList('') }>\n        <img src={ mealIcon } alt=\"foods page\" data-testid=\"food-bottom-btn\" />\n      </Link>\n\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React, { useEffect, useContext } from 'react';\nimport Header from '../components/Header';\nimport RecipeCards from '../components/RecipeCards';\nimport Footer from '../components/Footer';\nimport RecipeAppContext from '../context/RecipeAppContext';\n\nfunction Foods() {\n  const { setFoodList, toggleOn } = useContext(RecipeAppContext);\n\n  useEffect(() => {\n    if (!toggleOn) {\n      const foodEndpoint = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\n      fetch(foodEndpoint)\n        .then((response) => response.json())\n        .then((results) => setFoodList(results.meals));\n    }\n  }, [toggleOn]);\n\n  return (\n    <>\n      <Header title=\"Comidas\" icon foods />\n      <RecipeCards />\n      <Footer />\n    </>\n  );\n}\n\nexport default Foods;\n","import React, { useEffect, useContext } from 'react';\nimport Header from '../components/Header';\nimport RecipeCards from '../components/RecipeCards';\nimport Footer from '../components/Footer';\nimport RecipeAppContext from '../context/RecipeAppContext';\n\nfunction Drinks() {\n  const { setDrinksList, toggleOn } = useContext(RecipeAppContext);\n\n  useEffect(() => {\n    if (!toggleOn) {\n      const drinkEndpoint = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\n      fetch(drinkEndpoint)\n        .then((response) => response.json())\n        .then((results) => setDrinksList(results.drinks));\n    }\n  }, [toggleOn]);\n\n  return (\n    <div>\n      <Header title=\"Bebidas\" icon drinks />\n      <RecipeCards />\n      <Footer />\n    </div>\n  );\n}\n\nexport default Drinks;\n","const getMealById = async (endPoint) => {\n  const response = await fetch(endPoint);\n  const data = await response.json();\n  return response.ok ? Promise.resolve(data) : Promise.reject(data);\n};\n\nexport default getMealById;\n","const randomRecipe = async (type) => {\n  const response = await fetch(`https://www.${type}.com/api/json/v1/1/search.php?s=`);\n  const data = await response.json();\n  return response.ok ? Promise.resolve(data) : Promise.reject(data);\n};\n\nexport default randomRecipe;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport '../css/RecipeDetailsButton.css';\nimport { useHistory } from 'react-router-dom';\nimport RecipeAppContext from '../context/RecipeAppContext';\n\nfunction RecipeDetailsButton({ type, id }) {\n  const history = useHistory();\n  const { inProgressRecipes } = useContext(RecipeAppContext);\n  return (\n    <button\n      type=\"button\"\n      className=\"start-recipe-btn\"\n      data-testid=\"start-recipe-btn\"\n      onClick={ () => history.push(`/${type}/${id}/in-progress`) }\n    >\n      {!inProgressRecipes ? 'Iniciar Receita' : 'Continuar Receita'}\n    </button>\n  );\n}\n\nRecipeDetailsButton.propTypes = {\n  type: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nexport default RecipeDetailsButton;\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport RecipeAppContext from '../context/RecipeAppContext';\nimport '../css/RecipeDetails.css';\n\nfunction RenderFoodDetails({ copyLink }) {\n  const {\n    shareIcon,\n    bkHeart,\n    meal,\n    wtHeart,\n    isFavRecipe,\n    setIsFavRecipe,\n    checkFavoriteMeal,\n    saveFavoriteMeal,\n  } = useContext(RecipeAppContext);\n\n  useEffect(() => {\n    checkFavoriteMeal();\n    return () => {\n      setIsFavRecipe(false);\n    };\n  }, [meal, isFavRecipe]);\n\n  return (\n    <div>\n      <img\n        data-testid=\"recipe-photo\"\n        alt={ meal.strMeal }\n        src={ meal.strMealThumb }\n        height=\"350px\"\n      />\n      <div className=\"recipe-details-legend\">\n        <h3 data-testid=\"recipe-title\">{ meal.strMeal }</h3>\n        <input\n          type=\"image\"\n          data-testid=\"share-btn\"\n          src={ shareIcon }\n          alt=\"card da receita\"\n          onClick={ () => copyLink(meal.idMeal) }\n        />\n        <input\n          type=\"image\"\n          data-testid=\"favorite-btn\"\n          src={ isFavRecipe ? bkHeart : wtHeart }\n          alt=\"Favorite Button\"\n          onClick={ () => saveFavoriteMeal() }\n        />\n      </div>\n      <p\n        className=\"recipe-details-category\"\n        data-testid=\"recipe-category\"\n      >\n        { meal.strCategory }\n      </p>\n    </div>\n  );\n}\n\nRenderFoodDetails.propTypes = {\n  copyLink: PropTypes.func.isRequired,\n};\n\nexport default RenderFoodDetails;\n","import React, { useContext } from 'react';\nimport RecipeAppContext from '../context/RecipeAppContext';\n\nfunction RenderFoodIngred() {\n  const { meal } = useContext(RecipeAppContext);\n  function createIngredArray() {\n    const ingredArray = Object.entries(meal)\n      .filter((key) => key[0].includes('strIngredient'));\n    const ingredList = [];\n    ingredArray.forEach((item) => ingredList.push(item[1]));\n    return ingredList;\n  }\n\n  function createMeasuArray() {\n    const measureArray = Object.entries(meal)\n      .filter((key) => key[0].includes('strMeasure'));\n    const measureList = [];\n    measureArray.forEach((item) => measureList.push(item[1]));\n    return measureList;\n  }\n\n  const ingredList = createIngredArray();\n  const measureList = createMeasuArray();\n\n  return (\n    <div>\n      <p className=\"recipe-details-title\">Ingredients</p>\n      <ul className=\"recipe-details-ingredients-list\">\n        {ingredList.map((ingred, index) => {\n          if (ingred) {\n            return (\n              <li\n                key={ index }\n                data-testid={ `${index}-ingredient-name-and-measure` }\n              >\n                {`${ingred} - ${measureList[index]}`}\n              </li>\n            );\n          }\n          return null;\n        })}\n      </ul>\n    </div>\n  );\n}\n\nexport default RenderFoodIngred;\n","import React, { useContext } from 'react';\nimport RecipeAppContext from '../context/RecipeAppContext';\n\nfunction RenderFoodInstruction() {\n  const { meal } = useContext(RecipeAppContext);\n  return (\n    <div data-testid=\"instructions\">\n      <p className=\"recipe-details-title\">Instructions</p>\n      <div className=\"recipe-details-instruction-test\">\n        { meal.strInstructions }\n      </div>\n    </div>\n  );\n}\n\nexport default RenderFoodInstruction;\n","import React, { useContext } from 'react';\nimport RecipeAppContext from '../context/RecipeAppContext';\n\nfunction RenderFoodVideo() {\n  const { meal } = useContext(RecipeAppContext);\n  const urlLink = meal.strYoutube;\n  const youtubeVideoId = urlLink && urlLink.split('v=', 2)[1];\n  const embeddedLink = `https://www.youtube.com/embed/${youtubeVideoId}`;\n  const allowed = 'accelerometer; clipboard-write; encrypted-media; picture-in-picture';\n\n  return (\n    <div>\n      <p className=\"recipe-details-title\">Vídeo</p>\n      <iframe\n        data-testid=\"video\"\n        className=\"recipe-details-video\"\n        title={ meal.strMeal }\n        src={ embeddedLink }\n        width=\"360\"\n        height=\"180\"\n        frameBorder=\"0\"\n        allow={ allowed }\n        allowFullScreen\n      >\n        {meal.strMeal}\n      </iframe>\n    </div>\n  );\n}\n\nexport default RenderFoodVideo;\n","import React, { useContext } from 'react';\nimport RecipeAppContext from '../context/RecipeAppContext';\nimport '../css/RecipeDetails.css';\n\nfunction RenderFoodRecomendation() {\n  const { recomDrink } = useContext(RecipeAppContext);\n  const maxLength = 6;\n  const recomDrinkMap = recomDrink.map((recipe, index) => {\n    if (index < maxLength) {\n      if (index === 0 || index === 1) {\n        return (\n          <div\n            key={ recipe.strDrink }\n            data-testid={ `${index}-recomendation-card` }\n          >\n            <img\n              src={ recipe.strDrinkThumb }\n              alt={ recipe.strDrink }\n              height=\"160px\"\n              width=\"180px\"\n            />\n            <h5 data-testid={ `${index}-recomendation-title` }>{ recipe.strDrink }</h5>\n          </div>\n        );\n      }\n      return (\n        <div\n          key={ recipe.strDrink }\n          data-testid={ `${index}-recomendation-card` }\n          className=\"not-visible\"\n        >\n          <img\n            src={ recipe.strDrinkThumb }\n            alt={ recipe.strDrink }\n            height=\"160px\"\n            width=\"180px\"\n          />\n          <h5 data-testid={ `${index}-recomendation-title` }>{ recipe.strDrink }</h5>\n        </div>\n      );\n    }\n    return null;\n  });\n  return (\n    <div>\n      <p className=\"recipe-details-title\">Recomendadas</p>\n      <div className=\"scroll-recipes\">\n        { recomDrinkMap }\n      </div>\n    </div>\n  );\n}\n\nexport default RenderFoodRecomendation;\n","import React, { useEffect, useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport getMealById from '../services/getMealById';\nimport randomRecipe from '../services/randomRecipe';\nimport RecipeDetailsButton from '../components/RecipeDetailsButton';\nimport RecipeAppContext from '../context/RecipeAppContext';\nimport RenderFoodDetails from '../components/RenderFoodDetails';\nimport RenderFoodIngred from '../components/RenderFoodIngred';\nimport RenderFoodInstruction from '../components/RenderFoodInstruction';\nimport RenderFoodVideo from '../components/RenderFoodVideo';\nimport RenderFoodRecomendation from '../components/RenderFoodRecomendation';\n\nconst copy = require('react-copy-to-clipboard');\n\nfunction FoodsDetails(props) {\n  const { match: { params: { id } } } = props;\n  const [click, setClick] = useState(false);\n  const {\n    meal,\n    setMeal,\n    recomDrink,\n    setRecomDrink,\n    setIsRecipeDone,\n    isRecipeDone,\n    setInProgressRecipes,\n  } = useContext(RecipeAppContext);\n\n  function copyLink(drinkId) {\n    copy(`http://localhost:3000/comidas/${drinkId}`);\n    setClick(true);\n  }\n\n  useEffect(() => {\n    const endpoint = `https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`;\n    const getMealDetails = async () => {\n      const { meals } = await getMealById(endpoint);\n      setMeal(meals[0]);\n    };\n\n    const getRandomMeal = async () => {\n      const { drinks } = await randomRecipe('thecocktaildb');\n      setRecomDrink(drinks);\n    };\n\n    getMealDetails();\n    getRandomMeal();\n  }, []);\n\n  function checkIsRecipeDone(arrayDoneRecipe, currentMeal) {\n    const arrayLS = arrayDoneRecipe && arrayDoneRecipe.some(\n      (recipe) => recipe.id === Number(currentMeal.idMeal),\n    );\n    return arrayLS;\n  }\n\n  function checkInRecipeInProgress(InProgress, currentMeal) {\n    const arrayLS = Object.keys(InProgress);\n    const checkedArray = arrayLS.some(\n      (recipeID) => recipeID === currentMeal.idMeal,\n    );\n    return checkedArray;\n  }\n\n  useEffect(() => {\n    const inProgressRecipesLS = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    const DoneRecipesLS = JSON.parse(localStorage.getItem('doneRecipes'));\n    const checkedDoneRecipes = checkIsRecipeDone(DoneRecipesLS, meal);\n    setIsRecipeDone(checkedDoneRecipes);\n    if (inProgressRecipesLS && !checkedDoneRecipes) {\n      if (!inProgressRecipesLS.meals) return setInProgressRecipes(false);\n      const checkedInProgressRecipes = checkInRecipeInProgress(\n        inProgressRecipesLS.meals, meal,\n      );\n      setInProgressRecipes(checkedInProgressRecipes);\n    }\n  }, [meal]);\n\n  return (\n    <div>\n      {meal && <RenderFoodDetails copyLink={ copyLink } />}\n      <span>{click ? <p>Link copiado!</p> : null}</span>\n      {meal && <RenderFoodIngred />}\n      {meal && <RenderFoodInstruction />}\n      {meal && <RenderFoodVideo />}\n      {recomDrink && <RenderFoodRecomendation />}\n      {!isRecipeDone && <RecipeDetailsButton type=\"comidas\" id={ id } />}\n    </div>\n  );\n}\n\nFoodsDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nexport default FoodsDetails;\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport RecipeAppContext from '../context/RecipeAppContext';\nimport '../css/RecipeDetails.css';\n\nfunction RenderDrinkDetails({ copyLink }) {\n  const {\n    drink,\n    shareIcon,\n    bkHeart,\n    wtHeart,\n    isFavRecipe,\n    setIsFavRecipe,\n    saveFavoriteDrink,\n    checkFavoriteDrink,\n  } = useContext(RecipeAppContext);\n\n  useEffect(() => {\n    checkFavoriteDrink();\n    return () => {\n      setIsFavRecipe(false);\n    };\n  }, [drink, isFavRecipe]);\n\n  return (\n    <div>\n      <img\n        data-testid=\"recipe-photo\"\n        alt={ drink.strDrink }\n        src={ drink.strDrinkThumb }\n        height=\"350px\"\n      />\n      <div className=\"recipe-details-legend\">\n        <h3 data-testid=\"recipe-title\">{ drink.strDrink }</h3>\n        <input\n          type=\"image\"\n          data-testid=\"share-btn\"\n          src={ shareIcon }\n          alt=\"card da receita\"\n          onClick={ () => copyLink(drink.idDrink) }\n        />\n        <input\n          type=\"image\"\n          data-testid=\"favorite-btn\"\n          src={ isFavRecipe ? bkHeart : wtHeart }\n          alt=\"Favorite Button\"\n          onClick={ () => saveFavoriteDrink() }\n        />\n      </div>\n      <p\n        data-testid=\"recipe-category\"\n        className=\"recipe-details-category\"\n      >\n        { drink.strAlcoholic }\n      </p>\n    </div>\n  );\n}\n\nRenderDrinkDetails.propTypes = {\n  copyLink: PropTypes.func.isRequired,\n};\n\nexport default RenderDrinkDetails;\n","import React, { useContext } from 'react';\nimport RecipeAppContext from '../context/RecipeAppContext';\n\nfunction RenderDrinkIngred() {\n  const { drink } = useContext(RecipeAppContext);\n  function createIngredArray() {\n    const ingredArray = Object.entries(drink)\n      .filter((key) => key[0].includes('strIngredient'));\n    const ingredList = [];\n    ingredArray.forEach((item) => ingredList.push(item[1]));\n    return ingredList;\n  }\n\n  function createMeasuArray() {\n    const measureArray = Object.entries(drink)\n      .filter((key) => key[0].includes('strMeasure'));\n    const measureList = [];\n    measureArray.forEach((item) => measureList.push(item[1]));\n    return measureList;\n  }\n\n  const ingredList = createIngredArray();\n  const measureList = createMeasuArray();\n\n  return (\n    <div>\n      <p className=\"recipe-details-title\">Ingredients</p>\n      <ul className=\"recipe-details-ingredients-list\">\n        {ingredList.map((ingred, index) => {\n          if (ingred) {\n            return (\n              <li\n                key={ index }\n                data-testid={ `${index}-ingredient-name-and-measure` }\n              >\n                {`${ingred} - ${measureList[index]}`}\n              </li>\n            );\n          }\n          return null;\n        })}\n      </ul>\n    </div>\n  );\n}\n\nexport default RenderDrinkIngred;\n","import React, { useContext } from 'react';\nimport RecipeAppContext from '../context/RecipeAppContext';\n\nfunction RenderDrinkInstruction() {\n  const { drink } = useContext(RecipeAppContext);\n  return (\n    <p data-testid=\"instructions\">\n      <p className=\"recipe-details-title\">Instructions</p>\n      <div className=\"recipe-details-instruction-test\">\n        { drink.strInstructions }\n      </div>\n    </p>\n  );\n}\n\nexport default RenderDrinkInstruction;\n","import React, { useContext } from 'react';\nimport RecipeAppContext from '../context/RecipeAppContext';\nimport '../css/RecipeDetails.css';\n\nfunction RenderDrinkRecomendation() {\n  const { recomMeal } = useContext(RecipeAppContext);\n  const maxLength = 6;\n  const recomMealMap = recomMeal.map((recipe, index) => {\n    if (index < maxLength) {\n      if (index === 0 || index === 1) {\n        return (\n          <div\n            key={ recipe.strMeal }\n            data-testid={ `${index}-recomendation-card` }\n          >\n            <img\n              src={ recipe.strMealThumb }\n              alt={ recipe.strMeal }\n              height=\"160px\"\n              width=\"180px\"\n            />\n            <h5 data-testid={ `${index}-recomendation-title` }>{ recipe.strMeal }</h5>\n          </div>\n        );\n      }\n      return (\n        <div\n          key={ recipe.strMeal }\n          data-testid={ `${index}-recomendation-card` }\n          className=\"not-visible\"\n        >\n          <img\n            src={ recipe.strMealThumb }\n            alt={ recipe.strMeal }\n            height=\"160px\"\n            width=\"180px\"\n          />\n          <h5 data-testid={ `${index}-recomendation-title` }>{ recipe.strMeal }</h5>\n        </div>\n      );\n    }\n    return null;\n  });\n  return (\n    <div>\n      <p className=\"recipe-details-title\">Recomendadas</p>\n      <div className=\"scroll-recipes\">\n        { recomMealMap }\n      </div>\n    </div>\n  );\n}\n\nexport default RenderDrinkRecomendation;\n","import React, { useEffect, useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport getMealById from '../services/getMealById';\nimport randomRecipe from '../services/randomRecipe';\nimport RecipeDetailsButton from '../components/RecipeDetailsButton';\nimport RecipeAppContext from '../context/RecipeAppContext';\nimport RenderDrinkDetails from '../components/RenderDrinkDetails';\nimport RenderDrinkIngred from '../components/RenderDrinkIngred';\nimport RenderDrinkInstruction from '../components/RenderDrinkInstruction';\nimport RenderDrinkRecomendation from '../components/RenderDrinkRecomendation';\n\nconst copy = require('react-copy-to-clipboard');\n\nfunction DrinksDetails(props) {\n  const { match: { params: { id } } } = props;\n  const [click, setClick] = useState(false);\n  const {\n    drink,\n    setDrink,\n    recomMeal,\n    setRecomMeal,\n    isRecipeDone,\n    setIsRecipeDone,\n    setInProgressRecipes,\n  } = useContext(RecipeAppContext);\n\n  function copyLink(drinkId) {\n    copy(`http://localhost:3000/bebidas/${drinkId}`);\n    setClick(true);\n  }\n\n  useEffect(() => {\n    const endpoint = `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`;\n    const getMealDetails = async () => {\n      const { drinks } = await getMealById(endpoint);\n      setDrink(drinks[0]);\n    };\n\n    const getRandomMeal = async () => {\n      const { meals } = await randomRecipe('themealdb');\n      setRecomMeal(meals);\n    };\n\n    getMealDetails();\n    getRandomMeal();\n  }, []);\n\n  function checkIsRecipeDone(arrayDoneRecipe, currentMeal) {\n    const arrayLS = arrayDoneRecipe && arrayDoneRecipe.some(\n      (recipe) => recipe.id === Number(currentMeal.idDrink),\n    );\n    return arrayLS;\n  }\n\n  function checkInRecipeInProgress(InProgress, currentMeal) {\n    const arrayLS = Object.keys(InProgress);\n    const checkedArray = arrayLS.some(\n      (recipeID) => recipeID === currentMeal.idDrink,\n    );\n    return checkedArray;\n  }\n\n  useEffect(() => {\n    const inProgressRecipesLS = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    const DoneRecipesLS = JSON.parse(localStorage.getItem('doneRecipes'));\n    const checkedDoneRecipes = checkIsRecipeDone(DoneRecipesLS, drink);\n    setIsRecipeDone(checkedDoneRecipes);\n    if (inProgressRecipesLS && !checkedDoneRecipes) {\n      if (!inProgressRecipesLS.cocktails) return setInProgressRecipes(false);\n      const checkedInProgressRecipes = checkInRecipeInProgress(\n        inProgressRecipesLS.cocktails, drink,\n      );\n      setInProgressRecipes(checkedInProgressRecipes);\n    }\n  }, [drink]);\n\n  return (\n    <div>\n      {drink && <RenderDrinkDetails copyLink={ copyLink } />}\n      <span>{click ? <p>Link copiado!</p> : null}</span>\n      {drink && <RenderDrinkIngred />}\n      {drink && <RenderDrinkInstruction />}\n      {recomMeal && <RenderDrinkRecomendation />}\n      {!isRecipeDone && <RecipeDetailsButton type=\"bebidas\" id={ id } />}\n    </div>\n  );\n}\n\nDrinksDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nexport default DrinksDetails;\n","export default __webpack_public_path__ + \"static/media/blackHeartIcon.083cb006.svg\";","export default __webpack_public_path__ + \"static/media/whiteHeartIcon.2b822118.svg\";","export default __webpack_public_path__ + \"static/media/shareIcon.87def1bd.svg\";","import React, { useEffect, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport '../css/RecipeInProgress.css';\nimport { useHistory } from 'react-router';\nimport shareIcon from '../images/shareIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport RecipeAppContext from '../context/RecipeAppContext';\nimport '../css/RecipeDetails.css';\n\nconst copy = require('react-copy-to-clipboard');\n\nfunction RenderFoodProgress({ strMealThumb, strMeal, strCategory,\n  strInstructions, strArea, id, finalListIngredients,\n  classNameIngredients, statusIngredients, statusEndRecipeButton,\n  favoriteIcon, setFavoriteIcon, setHasChecked,\n  setStatusIngredients, setClassNameIngredients,\n  setCountCheckIngredList, countCheckIngredList,\n  numberIngredients, setStatusEndRecipeButton, hasChecked, strTags }) {\n  const [click, setClick] = useState(false);\n  const history = useHistory();\n  const {\n    setFilteredRecipesDone,\n  } = useContext(RecipeAppContext);\n\n  useEffect(() => {\n    if (hasChecked) {\n      const currentLocalStorage = JSON.parse(localStorage.getItem('inProgressRecipes')); // pego o LocalStorage atual\n      const newObject = {\n        ...currentLocalStorage,\n        meals: {\n          ...currentLocalStorage.meals,\n          [id]: statusIngredients,\n        },\n      };\n      localStorage.setItem('inProgressRecipes', JSON.stringify(newObject));\n    }\n  }, [statusIngredients]);\n\n  useEffect(() => {\n    if ((countCheckIngredList === numberIngredients)) {\n      return setStatusEndRecipeButton(false);\n    }\n    return setStatusEndRecipeButton(true);\n  }, [countCheckIngredList, numberIngredients]);\n\n  function checkList(index) {\n    setHasChecked(true);\n    const currentStatusIngredients = [...statusIngredients];\n    if (statusIngredients[index] === true) {\n      currentStatusIngredients[Number(index)] = false;\n      setStatusIngredients(currentStatusIngredients);\n      setClassNameIngredients((prev) => ({ ...prev, [index]: 'notChecked' }));\n      const newCount = countCheckIngredList - 1;\n      return setCountCheckIngredList(newCount);\n    }\n    currentStatusIngredients[Number(index)] = true;\n    setStatusIngredients(currentStatusIngredients);\n    setClassNameIngredients((prev) => ({ ...prev, [index]: 'yesChecked' }));\n    const newCount = countCheckIngredList + 1;\n    return setCountCheckIngredList(newCount);\n  }\n\n  function copyLink(index) {\n    copy(`http://localhost:3000/comidas/${index}`);\n    setClick(true);\n  }\n\n  function changeStatusIcon() {\n    if (favoriteIcon === whiteHeartIcon) {\n      setFavoriteIcon(blackHeartIcon);\n      let favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n      if (!favoriteRecipes) favoriteRecipes = [];\n      const newFavoriteRecipes = [\n        ...favoriteRecipes,\n        {\n          id,\n          type: 'comida',\n          area: strArea,\n          category: strCategory,\n          alcoholicOrNot: '',\n          name: strMeal,\n          image: strMealThumb,\n        },\n      ];\n      localStorage.setItem('favoriteRecipes', JSON.stringify(newFavoriteRecipes));\n    }\n    if (favoriteIcon === blackHeartIcon) {\n      setFavoriteIcon(whiteHeartIcon);\n      const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n      const newFavRecipes = favoriteRecipes.filter((recipe) => recipe.id !== id);\n      localStorage.setItem('favoriteRecipes', JSON.stringify(newFavRecipes));\n    }\n  }\n\n  function createIngredArray() {\n    const finalList = finalListIngredients.map((ingredient, index) => (\n      <li\n        key={ index }\n        data-testid={ `${index}-ingredient-step` }\n        className={ classNameIngredients[index] }\n      >\n        {ingredient}\n        <input\n          type=\"checkbox\"\n          id={ index }\n          checked={ statusIngredients[index] }\n          onClick={ (event) => checkList(event.target.id) }\n        />\n      </li>\n    ));\n    return (\n      <ul className=\"recipe-details-ingredients-list\">{ finalList }</ul>\n    );\n  }\n\n  function saveRecipeDoneInLocalStorage() {\n    const currentLocalStorage = JSON.parse(localStorage.getItem('doneRecipes')) || []; // pego o LocalStorage atual\n    let arrayTags = [];\n    if (strTags) arrayTags = strTags.split(',');\n    const newRecipeDone = {\n      id,\n      type: 'comida',\n      area: strArea,\n      category: strCategory,\n      alcoholicOrNot: '',\n      name: strMeal,\n      image: strMealThumb,\n      doneDate: '18/08/2021',\n      tags: arrayTags,\n    };\n    const newRecipesDone = [\n      ...currentLocalStorage,\n      newRecipeDone,\n    ];\n    localStorage.setItem('doneRecipes', JSON.stringify(newRecipesDone));\n    setFilteredRecipesDone(newRecipesDone);\n    return history.push('/receitas-feitas');\n  }\n\n  return (\n    <div>\n      <img\n        src={ strMealThumb }\n        alt={ strMeal }\n        height=\"350px\"\n        data-testid=\"recipe-photo\"\n      />\n      <span>\n        { click ? <p>Link copiado!</p> : null }\n      </span>\n      <div className=\"recipe-details-legend\">\n        <h3 data-testid=\"recipe-title\">{ strMeal }</h3>\n        <input\n          type=\"image\"\n          data-testid=\"share-btn\"\n          src={ shareIcon }\n          alt=\"compartilhar\"\n          onClick={ () => copyLink(id) }\n        />\n        <input\n          type=\"image\"\n          data-testid=\"favorite-btn\"\n          src={ favoriteIcon }\n          alt=\"botão favoritar\"\n          onClick={ () => changeStatusIcon() }\n        />\n      </div>\n      <p\n        data-testid=\"recipe-category\"\n        className=\"recipe-details-category\"\n      >\n        { strCategory }\n      </p>\n      <div>\n        <p className=\"recipe-details-title\">Ingredients</p>\n        <span>\n          { createIngredArray() }\n        </span>\n      </div>\n\n      <div>\n        <p className=\"recipe-details-title\">Instructions</p>\n        <p\n          data-testid=\"instructions\"\n          className=\"recipe-details-instruction-test\"\n        >\n          { strInstructions }\n        </p>\n      </div>\n\n      <button\n        type=\"button\"\n        data-testid=\"finish-recipe-btn\"\n        disabled={ statusEndRecipeButton }\n        onClick={ () => saveRecipeDoneInLocalStorage() }\n      >\n        Finalizar Receita\n      </button>\n    </div>\n  );\n}\n\nRenderFoodProgress.propTypes = {\n  strMealThumb: PropTypes.string.isRequired,\n  strMeal: PropTypes.string.isRequired,\n  strCategory: PropTypes.string.isRequired,\n  strInstructions: PropTypes.string.isRequired,\n  strArea: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  finalListIngredients: PropTypes.arrayOf(PropTypes.object).isRequired,\n  classNameIngredients: PropTypes.arrayOf(PropTypes.object).isRequired,\n  statusIngredients: PropTypes.arrayOf(PropTypes.object).isRequired,\n  statusEndRecipeButton: PropTypes.bool.isRequired,\n  favoriteIcon: PropTypes.string.isRequired,\n  setFavoriteIcon: PropTypes.func.isRequired,\n  setHasChecked: PropTypes.func.isRequired,\n  setStatusIngredients: PropTypes.func.isRequired,\n  setClassNameIngredients: PropTypes.func.isRequired,\n  setCountCheckIngredList: PropTypes.func.isRequired,\n  countCheckIngredList: PropTypes.number.isRequired,\n  numberIngredients: PropTypes.number.isRequired,\n  setStatusEndRecipeButton: PropTypes.func.isRequired,\n  hasChecked: PropTypes.bool.isRequired,\n  strTags: PropTypes.string.isRequired,\n};\n\nexport default RenderFoodProgress;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport '../css/RecipeInProgress.css';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport RenderFoodProgress from '../components/RenderFoodProgress';\n\nfunction FoodsRecipeInProgress({ match: { params: { id } } }) {\n  const [mealInProgress, setMealInProgress] = useState('');\n  const [loading, setIsLoading] = useState(true);\n  const [finalListIngredients, setFinalListIngredients] = useState();\n  const [classNameIngredients, setClassNameIngredients] = useState([]);\n  const [statusIngredients, setStatusIngredients] = useState([]);\n  const [favoriteIcon, setFavoriteIcon] = useState(whiteHeartIcon);\n  const [hasChecked, setHasChecked] = useState(false);\n  const [statusEndRecipeButton, setStatusEndRecipeButton] = useState(true);\n  const [countCheckIngredList, setCountCheckIngredList] = useState(0);\n  const [numberIngredients, setNumberIngredients] = useState(0);\n  const ingredListClass = [];\n  const ingredList = [];\n\n  useEffect(() => {\n    const endpoint = `https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`;\n    const getMealDetails = async () => {\n      const response = await fetch(endpoint);\n      const data = await response.json();\n      const { meals } = data;\n      setMealInProgress(meals[0]);\n    };\n    getMealDetails();\n  }, []);\n\n  useEffect(() => {\n    const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes')) || [];\n    const isFavorite = favoriteRecipes.some((recipe) => recipe.id === id);\n    if (isFavorite) setFavoriteIcon(blackHeartIcon);\n  }, []);\n\n  useEffect(() => {\n    let inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes')) || []; // senão tiver nada é um array vazio\n    const ingredArray = Object.entries(mealInProgress)\n      .filter((key) => key[0].includes('strIngredient') && key[1]);\n    ingredArray.forEach((item) => ingredList.push(item[1]));\n\n    if (inProgressRecipes && !inProgressRecipes.meals) {\n      const arrayStatus = [];\n      ingredArray.forEach(() => {\n        ingredListClass.push('notChecked');\n        arrayStatus.push(false); // crio um array mesmo tamanho de n ingredientes\n      });\n      inProgressRecipes = {\n        ...inProgressRecipes,\n        meals: {\n          [id]: arrayStatus,\n        },\n      };\n      localStorage.setItem('inProgressRecipes', JSON.stringify(inProgressRecipes));\n    }\n\n    const meals = inProgressRecipes.meals || { meals: {} };\n    let countYesChecked = 0;\n    const statusIngredSaved = meals[id] || [];\n    statusIngredSaved.forEach((item) => { // vou passar pelo array de status da comida atual, para criar o check css no item\n      if (item) {\n        countYesChecked += 1;\n        ingredListClass.push('yesChecked');\n      } else {\n        ingredListClass.push('notChecked');\n      }\n    });\n    setCountCheckIngredList(countYesChecked);\n    setStatusIngredients(statusIngredSaved);\n    setNumberIngredients(ingredList.length);\n    setClassNameIngredients(ingredListClass);\n    setFinalListIngredients(ingredList);\n    setIsLoading(false);\n    setFinalListIngredients(ingredList);\n  }, [mealInProgress]);\n\n  function renderComponentFoodProgress() {\n    return (\n      <div>\n        <RenderFoodProgress\n          strMealThumb={ mealInProgress.strMealThumb }\n          strMeal={ mealInProgress.strMeal }\n          strCategory={ mealInProgress.strCategory }\n          strInstructions={ mealInProgress.strInstructions }\n          strArea={ mealInProgress.strArea }\n          id={ id }\n          finalListIngredients={ finalListIngredients }\n          classNameIngredients={ classNameIngredients }\n          statusIngredients={ statusIngredients }\n          statusEndRecipeButton={ statusEndRecipeButton }\n          favoriteIcon={ favoriteIcon }\n          setFavoriteIcon={ setFavoriteIcon }\n          setHasChecked={ setHasChecked }\n          setStatusIngredients={ setStatusIngredients }\n          setClassNameIngredients={ setClassNameIngredients }\n          setCountCheckIngredList={ setCountCheckIngredList }\n          countCheckIngredList={ countCheckIngredList }\n          numberIngredients={ numberIngredients }\n          setStatusEndRecipeButton={ setStatusEndRecipeButton }\n          hasChecked={ hasChecked }\n          strTags={ mealInProgress.strTags }\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <span>\n        { loading ? <p>Carregando...</p> : renderComponentFoodProgress() }\n      </span>\n    </div>\n  );\n}\n\nFoodsRecipeInProgress.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nexport default FoodsRecipeInProgress;\n","import React, { useEffect, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport '../css/RecipeInProgress.css';\nimport '../css/RecipeDetails.css';\nimport { useHistory } from 'react-router';\nimport shareIcon from '../images/shareIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport RecipeAppContext from '../context/RecipeAppContext';\n\nconst copy = require('react-copy-to-clipboard');\n\nfunction RenderDrinkProgress({ strDrinkThumb, strDrink, strCategory,\n  strInstructions, id, finalListIngredients,\n  classNameIngredients, statusIngredients, statusEndRecipeButton,\n  favoriteIcon, setFavoriteIcon, setHasChecked,\n  setStatusIngredients, setClassNameIngredients,\n  setCountCheckIngredList, countCheckIngredList,\n  numberIngredients, setStatusEndRecipeButton, hasChecked, strAlcoholic }) {\n  const [click, setClick] = useState(false);\n  const history = useHistory();\n  const {\n    setFilteredRecipesDone,\n  } = useContext(RecipeAppContext);\n\n  useEffect(() => {\n    if (hasChecked) {\n      const currentLocalStorage = JSON.parse(localStorage.getItem('inProgressRecipes')); // pego o LocalStorage atual\n      const newObject = {\n        ...currentLocalStorage,\n        cocktails: {\n          ...currentLocalStorage.cocktails,\n          [id]: statusIngredients,\n        },\n      };\n      localStorage.setItem('inProgressRecipes', JSON.stringify(newObject));\n    }\n  }, [statusIngredients]);\n\n  useEffect(() => {\n    if ((countCheckIngredList === numberIngredients)) {\n      return setStatusEndRecipeButton(false);\n    }\n    return setStatusEndRecipeButton(true);\n  }, [countCheckIngredList, numberIngredients]);\n\n  function checkList(index) {\n    setHasChecked(true);\n    const currentStatusIngredients = [...statusIngredients];\n    if (statusIngredients[index] === true) {\n      currentStatusIngredients[Number(index)] = false;\n      setStatusIngredients(currentStatusIngredients);\n      setClassNameIngredients((prev) => ({ ...prev, [index]: 'notChecked' }));\n      const newCount = countCheckIngredList - 1;\n      return setCountCheckIngredList(newCount);\n    }\n    currentStatusIngredients[Number(index)] = true;\n    setStatusIngredients(currentStatusIngredients);\n    setClassNameIngredients((prev) => ({ ...prev, [index]: 'yesChecked' }));\n    const newCount = countCheckIngredList + 1;\n    return setCountCheckIngredList(newCount);\n  }\n\n  function copyLink(index) {\n    copy(`http://localhost:3000/bebidas/${index}`);\n    setClick(true);\n  }\n\n  function changeStatusIcon() {\n    if (favoriteIcon === whiteHeartIcon) {\n      setFavoriteIcon(blackHeartIcon);\n      let favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n      if (!favoriteRecipes) favoriteRecipes = [];\n      const newFavoriteRecipes = [\n        ...favoriteRecipes,\n        {\n          id,\n          type: 'bebida',\n          area: '',\n          category: strCategory,\n          alcoholicOrNot: strAlcoholic,\n          name: strDrink,\n          image: strDrinkThumb,\n        },\n      ];\n      localStorage.setItem('favoriteRecipes', JSON.stringify(newFavoriteRecipes));\n    }\n    if (favoriteIcon === blackHeartIcon) {\n      setFavoriteIcon(whiteHeartIcon);\n      const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n      const newFavRecipes = favoriteRecipes.filter((recipe) => recipe.id !== id);\n      localStorage.setItem('favoriteRecipes', JSON.stringify(newFavRecipes));\n    }\n  }\n\n  function createIngredArray() {\n    const finalList = finalListIngredients.map((ingredient, index) => (\n      <li\n        key={ index }\n        data-testid={ `${index}-ingredient-step` }\n        className={ classNameIngredients[index] }\n      >\n        {ingredient}\n        <input\n          type=\"checkbox\"\n          id={ index }\n          checked={ statusIngredients[index] }\n          onClick={ (event) => checkList(event.target.id) }\n        />\n      </li>\n    ));\n    return (\n      <ul className=\"recipe-details-ingredients-list\">{ finalList }</ul>\n    );\n  }\n\n  function saveRecipeDoneInLocalStorage() {\n    const currentLocalStorage = JSON.parse(localStorage.getItem('doneRecipes')) || []; // pego o LocalStorage atual\n    const newRecipeDone = {\n      id,\n      type: 'bebida',\n      area: '',\n      category: strCategory,\n      alcoholicOrNot: strAlcoholic,\n      name: strDrink,\n      image: strDrinkThumb,\n      doneDate: '18/08/2021',\n      tags: [],\n    };\n    const newRecipesDone = [\n      ...currentLocalStorage,\n      newRecipeDone,\n    ];\n    localStorage.setItem('doneRecipes', JSON.stringify(newRecipesDone));\n    setFilteredRecipesDone(newRecipesDone);\n    return history.push('/receitas-feitas');\n  }\n\n  return (\n    <div>\n      <img\n        src={ strDrinkThumb }\n        alt={ strDrink }\n        width=\"360px\"\n        height=\"300px\"\n        data-testid=\"recipe-photo\"\n      />\n      <span>\n        { click ? <p>Link copiado!</p> : null }\n      </span>\n      <div className=\"recipe-details-legend\">\n        <h3 data-testid=\"recipe-title\">{ strDrink }</h3>\n        <input\n          type=\"image\"\n          data-testid=\"share-btn\"\n          src={ shareIcon }\n          alt=\"compartilhar\"\n          onClick={ () => copyLink(id) }\n        />\n        <input\n          type=\"image\"\n          data-testid=\"favorite-btn\"\n          src={ favoriteIcon }\n          alt=\"botão favoritar\"\n          onClick={ () => changeStatusIcon() }\n        />\n      </div>\n      <p\n        data-testid=\"recipe-category\"\n        className=\"recipe-details-category\"\n      >\n        { strCategory }\n      </p>\n      <div>\n        <p className=\"recipe-details-title\">Ingredients</p>\n        <span>\n          { createIngredArray() }\n        </span>\n      </div>\n      <div>\n        <p className=\"recipe-details-title\">Instructions</p>\n        <p\n          data-testid=\"instructions\"\n          className=\"recipe-details-instruction-test\"\n        >\n          { strInstructions }\n        </p>\n      </div>\n\n      <button\n        type=\"button\"\n        data-testid=\"finish-recipe-btn\"\n        disabled={ statusEndRecipeButton }\n        onClick={ () => saveRecipeDoneInLocalStorage() }\n      >\n        Finalizar Receita\n      </button>\n    </div>\n  );\n}\n\nRenderDrinkProgress.propTypes = {\n  strDrinkThumb: PropTypes.string.isRequired,\n  strDrink: PropTypes.string.isRequired,\n  strCategory: PropTypes.string.isRequired,\n  strInstructions: PropTypes.string.isRequired,\n  strAlcoholic: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  finalListIngredients: PropTypes.arrayOf(PropTypes.object).isRequired,\n  classNameIngredients: PropTypes.arrayOf(PropTypes.object).isRequired,\n  statusIngredients: PropTypes.arrayOf(PropTypes.object).isRequired,\n  statusEndRecipeButton: PropTypes.bool.isRequired,\n  favoriteIcon: PropTypes.string.isRequired,\n  setFavoriteIcon: PropTypes.func.isRequired,\n  setHasChecked: PropTypes.func.isRequired,\n  setStatusIngredients: PropTypes.func.isRequired,\n  setClassNameIngredients: PropTypes.func.isRequired,\n  setCountCheckIngredList: PropTypes.func.isRequired,\n  countCheckIngredList: PropTypes.number.isRequired,\n  numberIngredients: PropTypes.number.isRequired,\n  setStatusEndRecipeButton: PropTypes.func.isRequired,\n  hasChecked: PropTypes.bool.isRequired,\n};\n\nexport default RenderDrinkProgress;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport '../css/RecipeInProgress.css';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport RenderDrinkProgress from '../components/RenderDrinkProgress';\n\nfunction DrinksRecipeInProgress({ match: { params: { id } } }) {\n  const [drinkInProgress, setDrinkInProgress] = useState('');\n  const [loading, setIsLoading] = useState(true);\n  const [finalListIngredients, setFinalListIngredients] = useState();\n  const [classNameIngredients, setClassNameIngredients] = useState([]);\n  const [statusIngredients, setStatusIngredients] = useState([]);\n  const [favoriteIcon, setFavoriteIcon] = useState(whiteHeartIcon);\n  const [hasChecked, setHasChecked] = useState(false);\n  const [statusEndRecipeButton, setStatusEndRecipeButton] = useState(true);\n  const [countCheckIngredList, setCountCheckIngredList] = useState(0);\n  const [numberIngredients, setNumberIngredients] = useState(0);\n  const ingredListClass = [];\n  const ingredList = [];\n\n  useEffect(() => {\n    const endpoint = `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`;\n    const getDrinkDetails = async () => {\n      const response = await fetch(endpoint);\n      const data = await response.json();\n      const { drinks } = data;\n      setDrinkInProgress(drinks[0]);\n    };\n    getDrinkDetails();\n  }, []);\n\n  useEffect(() => {\n    const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes')) || [];\n    const isFavorite = favoriteRecipes.some((recipe) => recipe.id === id);\n    if (isFavorite) setFavoriteIcon(blackHeartIcon);\n  }, []);\n\n  useEffect(() => {\n    let inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes')) || []; // senão tiver nada é um array vazio\n    const ingredArray = Object.entries(drinkInProgress)\n      .filter((key) => key[0].includes('strIngredient') && key[1]);\n    ingredArray.forEach((item) => ingredList.push(item[1]));\n\n    if (inProgressRecipes && !inProgressRecipes.cocktails) {\n      const arrayStatus = [];\n      ingredArray.forEach(() => {\n        ingredListClass.push('notChecked');\n        arrayStatus.push(false); // crio um array mesmo tamanho de n ingredientes\n      });\n      inProgressRecipes = {\n        ...inProgressRecipes,\n        cocktails: {\n          [id]: arrayStatus,\n        },\n      };\n      localStorage.setItem('inProgressRecipes', JSON.stringify(inProgressRecipes));\n    }\n\n    const cocktails = inProgressRecipes.cocktails || { cocktails: {} };\n    let countYesChecked = 0;\n    const statusIngredSaved = cocktails[id] || [];\n    statusIngredSaved.forEach((item) => { // vou passar pelo array de status da comida atual, para criar o check css no item\n      if (item) {\n        countYesChecked += 1;\n        ingredListClass.push('yesChecked');\n      } else {\n        ingredListClass.push('notChecked');\n      }\n    });\n    setCountCheckIngredList(countYesChecked);\n    setStatusIngredients(statusIngredSaved);\n    setNumberIngredients(ingredList.length);\n    setClassNameIngredients(ingredListClass);\n    setFinalListIngredients(ingredList);\n    setIsLoading(false);\n    setFinalListIngredients(ingredList);\n  }, [drinkInProgress]);\n\n  function renderComponentDrinkProgress() {\n    return (\n      <div>\n        <RenderDrinkProgress\n          strDrinkThumb={ drinkInProgress.strDrinkThumb }\n          strDrink={ drinkInProgress.strDrink }\n          strCategory={ drinkInProgress.strCategory }\n          strInstructions={ drinkInProgress.strInstructions }\n          id={ id }\n          finalListIngredients={ finalListIngredients }\n          classNameIngredients={ classNameIngredients }\n          statusIngredients={ statusIngredients }\n          statusEndRecipeButton={ statusEndRecipeButton }\n          favoriteIcon={ favoriteIcon }\n          setFavoriteIcon={ setFavoriteIcon }\n          setHasChecked={ setHasChecked }\n          setStatusIngredients={ setStatusIngredients }\n          setClassNameIngredients={ setClassNameIngredients }\n          setCountCheckIngredList={ setCountCheckIngredList }\n          countCheckIngredList={ countCheckIngredList }\n          numberIngredients={ numberIngredients }\n          setStatusEndRecipeButton={ setStatusEndRecipeButton }\n          hasChecked={ hasChecked }\n          strAlcoholic={ drinkInProgress.strAlcoholic }\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <span>\n        { loading ? <p>Carregando...</p> : renderComponentDrinkProgress()}\n      </span>\n    </div>\n  );\n}\n\nDrinksRecipeInProgress.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nexport default DrinksRecipeInProgress;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport '../css/Explore.css';\n\nfunction Explore() {\n  return (\n    <div>\n      <Header title=\"Explorar\" />\n\n      <div className=\"explore-container\">\n        <Link to=\"/explorar/comidas\">\n          <button\n            type=\"button\"\n            data-testid=\"explore-food\"\n            className=\"button-explore\"\n          >\n            Explorar Comidas\n          </button>\n        </Link>\n        <br />\n        <Link to=\"/explorar/bebidas\">\n          <button\n            type=\"button\"\n            data-testid=\"explore-drinks\"\n            className=\"button-explore\"\n          >\n            Explorar Bebidas\n          </button>\n        </Link>\n\n        <Footer />\n      </div>\n\n    </div>\n  );\n}\n\nexport default Explore;\n","import React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\n\nfunction ExploreFoods() {\n  const [shouldRedirect, setShouldRedirect] = useState(false);\n  const [idMeal, setIdMeal] = useState('');\n\n  async function fetchApiSurprise() {\n    const response = await fetch('https://www.themealdb.com/api/json/v1/1/random.php');\n    const json = await response.json();\n    const { meals } = json;\n    const meal = meals[0];\n    setIdMeal(meal.idMeal);\n    setShouldRedirect(true);\n  }\n\n  return (\n    <div>\n      <Header title=\"Explorar Comidas\" />\n      <div className=\"explore-container\">\n        <Link to=\"/explorar/comidas/ingredientes\">\n          <button\n            type=\"button\"\n            data-testid=\"explore-by-ingredient\"\n            className=\"button-explore\"\n          >\n            Por Ingredientes\n          </button>\n        </Link>\n        <br />\n\n        <Link to=\"/explorar/comidas/area\">\n          <button\n            type=\"button\"\n            data-testid=\"explore-by-area\"\n            className=\"button-explore\"\n          >\n            Por Local de Origem\n          </button>\n        </Link>\n        <br />\n\n        <button\n          type=\"button\"\n          data-testid=\"explore-surprise\"\n          className=\"button-explore\"\n          onClick={ () => fetchApiSurprise() }\n        >\n          Me Surpreenda!\n        </button>\n\n        <span>\n          { shouldRedirect ? <Redirect to={ `/comidas/${idMeal}` } /> : <div /> }\n        </span>\n      </div>\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default ExploreFoods;\n","import React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\n\nfunction ExploreDrinks() {\n  const [shouldRedirect, setShouldRedirect] = useState(false);\n  const [idDrink, setIdDrink] = useState('');\n\n  async function fetchApiSurprise() {\n    const response = await fetch('https://www.thecocktaildb.com/api/json/v1/1/random.php');\n    const json = await response.json();\n    const { drinks } = json;\n    const drink = drinks[0];\n    setIdDrink(drink.idDrink);\n    setShouldRedirect(true);\n  }\n\n  return (\n    <div>\n      <Header title=\"Explorar Bebidas\" />\n      <div className=\"explore-container\">\n\n        <Link to=\"/explorar/bebidas/ingredientes\">\n          <button\n            type=\"button\"\n            data-testid=\"explore-by-ingredient\"\n            className=\"button-explore\"\n          >\n            Por Ingredientes\n          </button>\n        </Link>\n        <br />\n\n        <button\n          type=\"button\"\n          data-testid=\"explore-surprise\"\n          className=\"button-explore\"\n          onClick={ () => fetchApiSurprise() }\n        >\n          Me Surpreenda!\n        </button>\n\n        <span>\n          { shouldRedirect ? <Redirect to={ `/bebidas/${idDrink}` } /> : <div /> }\n        </span>\n      </div>\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default ExploreDrinks;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport RecipeAppContext from '../context/RecipeAppContext';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport '../css/Explore.css';\n\nfunction ExploreFoodsByIngredients() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [ingredients, setIngredients] = useState([]);\n  const [shouldRedirectToPageFoods, setShouldRedirectToPageFoods] = useState(false);\n  const { setFoodList, setToggleOn } = useContext(RecipeAppContext);\n\n  useEffect(() => {\n    const fetchApi = async () => {\n      const response = await fetch('https://www.themealdb.com/api/json/v1/1/list.php?i=list');\n      const json = await response.json();\n      const { meals } = json;\n      setIngredients(meals);\n      setIsLoading(false);\n    };\n    fetchApi();\n  }, []);\n\n  function redirectToPageFood({ target: { id } }) {\n    console.log(id);\n    const fetchApi = async () => {\n      const response = await fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?i=${id}`);\n      const json = await response.json();\n      const { meals } = json;\n      setFoodList(meals);\n      setToggleOn(true);\n      setShouldRedirectToPageFoods(true);\n    };\n    fetchApi();\n  }\n\n  function renderIngredientsCard() {\n    const maxLength = 12;\n    const cardsIngredients = ingredients.map((ingredient, index) => {\n      if (index < maxLength) {\n        return (\n          <div\n            key={ ingredient.strIngredient }\n            role=\"link\"\n            tabIndex={ 0 }\n            data-testid={ `${index}-ingredient-card` }\n            className=\"card-ingredients\"\n            id={ ingredient.strIngredient }\n            onClick={ (event) => redirectToPageFood(event) }\n            onKeyDown={ (event) => redirectToPageFood(event) }\n          >\n            <img\n              alt=\"thumbnail drink\"\n              height=\"50\"\n              id={ ingredient.strIngredient }\n              src={ `https://www.themealdb.com/images/ingredients/${ingredient.strIngredient}-Small.png` }\n              data-testid={ `${index}-card-img` }\n            />\n            <p\n              id={ ingredient.strIngredient }\n              data-testid={ `${index}-card-name` }\n            >\n              {ingredient.strIngredient}\n            </p>\n          </div>\n        );\n      } return null;\n    });\n    return cardsIngredients;\n  }\n\n  return (\n    <div>\n      <Header title=\"Explorar Ingredientes\" />\n\n      <div>\n        { isLoading\n          ? <p>Carregando...</p>\n          : <div className=\"explore-card-container\">{ renderIngredientsCard() }</div>}\n      </div>\n\n      <span>\n        { shouldRedirectToPageFoods ? <Redirect to=\"/comidas\" /> : <div /> }\n      </span>\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default ExploreFoodsByIngredients;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport RecipeAppContext from '../context/RecipeAppContext';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport '../css/Explore.css';\n\nfunction ExploreDrinksByIngredients() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [ingredients, setIngredients] = useState([]);\n  const [shouldRedirectToPageDrinks, setShouldRedirectToPageDrinks] = useState(false);\n  const { setDrinksList, setToggleOn } = useContext(RecipeAppContext);\n\n  useEffect(() => {\n    const fetchApi = async () => {\n      const response = await fetch('https://www.thecocktaildb.com/api/json/v1/1/list.php?i=list');\n      const json = await response.json();\n      const { drinks } = json;\n      setIngredients(drinks);\n      setIsLoading(false);\n    };\n    fetchApi();\n  }, []);\n\n  function redirectToPageDrinks({ target: { id } }) {\n    const fetchApi = async () => {\n      const response = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${id}`);\n      const json = await response.json();\n      const { drinks } = json;\n      setDrinksList(drinks);\n      setToggleOn(true);\n      setShouldRedirectToPageDrinks(true);\n    };\n    fetchApi();\n  }\n\n  function renderIngredientsCard() {\n    const maxLength = 12;\n    const cardsIngredients = ingredients.map((ingredient, index) => {\n      if (index < maxLength) {\n        return (\n          <div\n            key={ ingredient.strIngredient1 }\n            role=\"link\"\n            tabIndex={ 0 }\n            data-testid={ `${index}-ingredient-card` }\n            className=\"card-ingredients\"\n            id={ ingredient.strIngredient1 }\n            onClick={ (event) => redirectToPageDrinks(event) }\n            onKeyDown={ (event) => redirectToPageDrinks(event) }\n          >\n            <img id={ ingredient.strIngredient1 } alt=\"thumbnail drink\" height=\"50\" src={ `https://www.thecocktaildb.com/images/ingredients/${ingredient.strIngredient1}-Small.png` } data-testid={ `${index}-card-img` } />\n            <p\n              id={ ingredient.strIngredient1 }\n              data-testid={ `${index}-card-name` }\n            >\n              {ingredient.strIngredient1}\n            </p>\n          </div>\n        );\n      } return null;\n    });\n    return cardsIngredients;\n  }\n\n  return (\n    <div>\n      <Header title=\"Explorar Ingredientes\" />\n\n      <div>\n        {\n          isLoading\n            ? <p>Carregando...</p>\n            : <div className=\"explore-card-container\">{ renderIngredientsCard() }</div>\n        }\n      </div>\n\n      <span>\n        { shouldRedirectToPageDrinks ? <Redirect to=\"/bebidas\" /> : <div /> }\n      </span>\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default ExploreDrinksByIngredients;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport '../css/Explore.css';\n\nfunction ExploreFoodsByArea() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [areas, setAreas] = useState([]);\n  const [chosenArea, setChosenArea] = useState('');\n  const [recipesChosenArea, setRecipesChosenArea] = useState([]);\n\n  useEffect(() => {\n    const fetchApi = async () => {\n      const response = await fetch('https://www.themealdb.com/api/json/v1/1/list.php?a=list');\n      const json = await response.json();\n      const { meals } = json;\n      setChosenArea(meals[0].strArea);\n      setAreas(meals);\n      setIsLoading(false);\n    };\n    fetchApi();\n  }, []);\n\n  function renderRecipesByArea() {\n    const fetchApi = async () => {\n      const response = await fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?a=${chosenArea}`);\n      const json = await response.json();\n      setRecipesChosenArea(json.meals);\n    };\n    fetchApi();\n\n    const maxLength = 12;\n\n    const recipes = recipesChosenArea.map((recipe, index) => {\n      if (index < maxLength) {\n        return (\n          <Link key={ recipe.idMeal } to={ `/comidas/${recipe.idMeal}` }>\n            <div className=\"card-ingredients\" data-testid={ `${index}-recipe-card` }>\n              <img\n                height=\"50\"\n                alt=\"recipe\"\n                src={ recipe.strMealThumb }\n                data-testid={ `${index}-card-img` }\n              />\n              <p data-testid={ `${index}-card-name` } className=\"name-recipe-area\">\n                { recipe.strMeal }\n              </p>\n            </div>\n          </Link>\n        );\n      } return null;\n    });\n\n    return recipes;\n  }\n\n  function renderDropDownAreas() {\n    const options = areas.map((area) => (\n      <option\n        key={ area.strArea }\n        value={ area.strArea }\n        data-testid={ `${area.strArea}-option` }\n      >\n        {area.strArea}\n      </option>\n    ));\n\n    const allOption = (\n      <option data-testid=\"All-option\" value={ areas[0].strArea }>\n        All\n      </option>\n    );\n\n    return (\n      <select\n        onChange={ (event) => setChosenArea(event.target.value) }\n        data-testid=\"explore-by-area-dropdown\"\n        className=\"explore-select-dropdown\"\n      >\n        { options }\n        { allOption }\n      </select>\n    );\n  }\n\n  return (\n    <div>\n      <Header title=\"Explorar Origem\" icon />\n\n      <span>\n        {\n          isLoading\n            ? <div />\n            : <div className=\"dropdown-areas\">{ renderDropDownAreas() }</div>\n        }\n        {' '}\n      </span>\n\n      <span>\n        {\n          isLoading\n            ? <p>Carregando Receitas...</p>\n            : <div className=\"explore-card-container\">{ renderRecipesByArea() }</div>\n        }\n      </span>\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default ExploreFoodsByArea;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport '../css/Profile.css';\n\nfunction Perfil() {\n  const user = localStorage.getItem('user');\n  const objUser = JSON.parse(user) || {};\n\n  return (\n    <div>\n      <Header title=\"Perfil\" />\n      <div className=\"email-profile\">\n        <p>Email: </p>\n        <p data-testid=\"profile-email\">{objUser.email}</p>\n      </div>\n      <div className=\"profile-container\">\n        <Link to=\"/receitas-feitas\">\n          <button\n            type=\"button\"\n            data-testid=\"profile-done-btn\"\n            className=\"profile-button\"\n          >\n            Receitas Feitas\n          </button>\n        </Link>\n\n        <Link to=\"/receitas-favoritas\">\n          <button\n            type=\"button\"\n            data-testid=\"profile-favorite-btn\"\n            className=\"profile-button\"\n          >\n            Receitas Favoritas\n          </button>\n        </Link>\n\n        <Link to=\"/\">\n          <button\n            type=\"button\"\n            data-testid=\"profile-logout-btn\"\n            className=\"profile-button\"\n            onClick={ () => localStorage.clear() }\n          >\n            Sair\n          </button>\n        </Link>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default Perfil;\n","import React, { useContext, useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Header from '../components/Header';\nimport shareIcon from '../images/shareIcon.svg';\nimport RecipeAppContext from '../context/RecipeAppContext';\nimport '../css/Profile.css';\n\nconst copy = require('react-copy-to-clipboard');\n\nfunction RecipesDone() {\n  const [click, setClick] = useState(false);\n  const [filterType, setFilterType] = useState('All');\n  const [shouldRender, setShouldRender] = useState(false);\n  const history = useHistory();\n  const {\n    filteredRecipesDone,\n    setFilteredRecipesDone,\n  } = useContext(RecipeAppContext);\n\n  function copyLink(type, id) {\n    copy(`http://localhost:3000/${type}s/${id}`);\n    setClick(true);\n  }\n\n  function filterRecipesDone(doneList, type) {\n    let filteredList = [];\n    switch (type) {\n    case 'Food':\n      filteredList = doneList.filter((recipe) => recipe.type === 'comida');\n      break;\n    case 'Drink':\n      filteredList = doneList.filter((recipe) => recipe.type === 'bebida');\n      break;\n    default:\n      filteredList = doneList;\n      break;\n    }\n    setFilteredRecipesDone(filteredList);\n  }\n\n  useEffect(() => {\n    const localStorageRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n    if (!localStorageRecipes) return;\n    filterRecipesDone(localStorageRecipes, filterType);\n    setShouldRender(false);\n  }, [filterType, shouldRender]);\n\n  return (\n    <div>\n      <Header title=\"Receitas Feitas\" />\n      <div className=\"favorite-recipes-buttons-container\">\n        <button\n          type=\"button\"\n          data-testid=\"filter-by-all-btn\"\n          name=\"All\"\n          className=\"favorite-recipes-buttons\"\n          onClick={ ({ target: { name } }) => setFilterType(name) }\n        >\n          All\n        </button>\n\n        <button\n          type=\"button\"\n          data-testid=\"filter-by-food-btn\"\n          name=\"Food\"\n          className=\"favorite-recipes-buttons\"\n          onClick={ ({ target: { name } }) => setFilterType(name) }\n        >\n          Food\n        </button>\n\n        <button\n          type=\"button\"\n          data-testid=\"filter-by-drink-btn\"\n          name=\"Drink\"\n          className=\"favorite-recipes-buttons\"\n          onClick={ ({ target: { name } }) => setFilterType(name) }\n        >\n          Drinks\n        </button>\n      </div>\n\n      <span>{click ? <p>Link copiado!</p> : <div />}</span>\n\n      <div className=\"favorite-recipes-container\">\n        {filteredRecipesDone && filteredRecipesDone.map((recipes, index) => (\n          <div key={ index } className=\"favorite-recipes-cards\">\n            <input\n              type=\"image\"\n              data-testid={ `${index}-horizontal-image` }\n              src={ recipes.image }\n              width=\"100%\"\n              height=\"150px\"\n              alt={ recipes.name }\n              onClick={ () => history.push(`/${recipes.type}s/${recipes.id}`) }\n            />\n\n            <div className=\"recipes-card-content\">\n              <p\n                className=\"profile-area-name\"\n                data-testid={ `${index}-horizontal-top-text` }\n              >\n                {`${recipes.area} - ${recipes.category} ${recipes.alcoholicOrNot}`}\n              </p>\n\n              <a\n                href={ `/${recipes.type}s/${recipes.id}` }\n                data-testid={ `${index}-horizontal-name` }\n                className=\"profile-recipe-name\"\n              >\n                { recipes.name }\n              </a>\n\n              <p data-testid={ `${index}-horizontal-done-date` }>{ recipes.doneDate }</p>\n\n              <div className=\"profile-icons\">\n                <div>\n                  {recipes.tags && recipes.tags.map((tag, indexTag) => (\n                    <p\n                      key={ indexTag }\n                      data-testid={ `${index}-${tag}-horizontal-tag` }\n                    >\n                      {tag}\n                    </p>\n                  ))}\n                </div>\n\n                <input\n                  type=\"image\"\n                  data-testid={ `${index}-horizontal-share-btn` }\n                  src={ shareIcon }\n                  alt=\"card da receita\"\n                  onClick={ () => copyLink(recipes.type, recipes.id) }\n                />\n              </div>\n\n            </div>\n\n          </div>\n        ))}\n      </div>\n\n    </div>\n  );\n}\n\nexport default RecipesDone;\n","import React, { useContext, useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Header from '../components/Header';\nimport shareIcon from '../images/shareIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport RecipeAppContext from '../context/RecipeAppContext';\nimport '../css/Profile.css';\n\nconst copy = require('react-copy-to-clipboard');\n\nfunction FavoriteRecipes() {\n  const [click, setClick] = useState(false);\n  const [filterType, setFilterType] = useState('All');\n  const [shouldRender, setShouldRender] = useState(false);\n  const history = useHistory();\n  const {\n    filteredFavoritesRecipes,\n    setFilteredFavoritesRecipes,\n  } = useContext(RecipeAppContext);\n\n  function copyLink(type, id) {\n    copy(`http://localhost:3000/${type}s/${id}`);\n    setClick(true);\n  }\n\n  function filterFavoriteRecipes(favList, type) {\n    let filteredList = [];\n    switch (type) {\n    case 'Food':\n      filteredList = favList.filter((recipe) => recipe.type === 'comida');\n      break;\n    case 'Drink':\n      filteredList = favList.filter((recipe) => recipe.type === 'bebida');\n      break;\n    default:\n      filteredList = favList;\n      break;\n    }\n    setFilteredFavoritesRecipes(filteredList);\n  }\n\n  useEffect(() => {\n    const localStorageRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    if (!localStorageRecipes) return;\n    filterFavoriteRecipes(localStorageRecipes, filterType);\n    setShouldRender(false);\n  }, [filterType, shouldRender]);\n\n  function deleteFavoriteRecipe({ target: { id } }) {\n    const localStorageRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const newFavoriteRecipes = localStorageRecipes.filter((item) => item.id !== id);\n    localStorage.setItem('favoriteRecipes', JSON.stringify(newFavoriteRecipes));\n    setShouldRender(true);\n  }\n\n  return (\n    <div>\n      <Header title=\"Receitas Favoritas\" />\n      <div className=\"favorite-recipes-buttons-container\">\n        <button\n          type=\"button\"\n          data-testid=\"filter-by-all-btn\"\n          name=\"All\"\n          className=\"favorite-recipes-buttons\"\n          onClick={ ({ target: { name } }) => setFilterType(name) }\n        >\n          All\n        </button>\n\n        <button\n          type=\"button\"\n          data-testid=\"filter-by-food-btn\"\n          name=\"Food\"\n          className=\"favorite-recipes-buttons\"\n          onClick={ ({ target: { name } }) => setFilterType(name) }\n        >\n          Food\n        </button>\n\n        <button\n          type=\"button\"\n          data-testid=\"filter-by-drink-btn\"\n          name=\"Drink\"\n          className=\"favorite-recipes-buttons\"\n          onClick={ ({ target: { name } }) => setFilterType(name) }\n        >\n          Drinks\n        </button>\n      </div>\n\n      <span>{click ? <p>Link copiado!</p> : <div />}</span>\n\n      <div className=\"favorite-recipes-container\">\n        {filteredFavoritesRecipes && filteredFavoritesRecipes.map((recipes, index) => (\n          <div key={ index } className=\"favorite-recipes-cards\">\n            <input\n              type=\"image\"\n              data-testid={ `${index}-horizontal-image` }\n              src={ recipes.image }\n              width=\"100%\"\n              height=\"150px\"\n              alt={ recipes.name }\n              onClick={ () => history.push(`/${recipes.type}s/${recipes.id}`) }\n            />\n\n            <div className=\"recipes-card-content\">\n              <p\n                className=\"profile-area-name\"\n                data-testid={ `${index}-horizontal-top-text` }\n              >\n                {`${recipes.area} - ${recipes.category} ${recipes.alcoholicOrNot}`}\n              </p>\n\n              <a\n                href={ `/${recipes.type}s/${recipes.id}` }\n                data-testid={ `${index}-horizontal-name` }\n                onClick={ () => history.push(`/${recipes.type}s/${recipes.id}`) }\n                className=\"profile-recipe-name\"\n              >\n                { recipes.name }\n              </a>\n\n              <div className=\"profile-icons\">\n                <input\n                  type=\"image\"\n                  data-testid={ `${index}-horizontal-favorite-btn` }\n                  src={ blackHeartIcon }\n                  alt={ recipes.name }\n                  id={ recipes.id }\n                  onClick={ (e) => deleteFavoriteRecipe(e) }\n                />\n                <input\n                  type=\"image\"\n                  data-testid={ `${index}-horizontal-share-btn` }\n                  src={ shareIcon }\n                  alt=\"card da receita\"\n                  onClick={ () => copyLink(recipes.type, recipes.id) }\n                />\n              </div>\n\n            </div>\n\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default FavoriteRecipes;\n","import React from 'react';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\n\nfunction NotFound() {\n  return (\n    <div>\n      <Header title=\"\" />\n      <p>Not Found</p>\n      <Footer />\n    </div>\n  );\n}\n\nexport default NotFound;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport {\n  Login,\n  Foods,\n  Drinks,\n  FoodsDetails,\n  DrinksDetails,\n  FoodsRecipeInProgress,\n  DrinksRecipeInProgress,\n  Explore,\n  ExploreFoods,\n  ExploreDrinks,\n  ExploreFoodsByIngredients,\n  ExploreDrinksByIngredients,\n  ExploreFoodsByArea,\n  Perfil,\n  RecipesDone,\n  FavoriteRecipes,\n  NotFound,\n} from '../pages/index';\n\nfunction Routes() {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={ Login } />\n      <Route exact path=\"/comidas\" component={ Foods } />\n      <Route exact path=\"/bebidas\" component={ Drinks } />\n      <Route exact path=\"/comidas/:id\" component={ FoodsDetails } />\n      <Route exact path=\"/bebidas/:id\" component={ DrinksDetails } />\n      <Route exact path=\"/comidas/:id/in-progress\" component={ FoodsRecipeInProgress } />\n      <Route exact path=\"/bebidas/:id/in-progress\" component={ DrinksRecipeInProgress } />\n      <Route exact path=\"/explorar\" component={ Explore } />\n      <Route exact path=\"/explorar/comidas\" component={ ExploreFoods } />\n      <Route exact path=\"/explorar/bebidas\" component={ ExploreDrinks } />\n      <Route\n        exact\n        path=\"/explorar/comidas/ingredientes\"\n        component={ ExploreFoodsByIngredients }\n      />\n      <Route\n        exact\n        path=\"/explorar/bebidas/ingredientes\"\n        component={ ExploreDrinksByIngredients }\n      />\n      <Route exact path=\"/explorar/comidas/area\" component={ ExploreFoodsByArea } />\n      <Route exact path=\"/perfil\" component={ Perfil } />\n      <Route exact path=\"/receitas-feitas\" component={ RecipesDone } />\n      <Route exact path=\"/receitas-favoritas\" component={ FavoriteRecipes } />\n      <Route component={ NotFound } />\n    </Switch>\n  );\n}\n\nexport default Routes;\n","import React from 'react';\nimport './App.css';\nimport Routes from './routes/Routes';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Routes />\n    </div>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport RecipeAppContext from '../context/RecipeAppContext';\nimport bkHeart from '../images/blackHeartIcon.svg';\nimport wtHeart from '../images/whiteHeartIcon.svg';\nimport shareIcon from '../images/shareIcon.svg';\n\nfunction RecipeAppProvider({ children }) {\n  const [drink, setDrink] = useState('');\n  const [drinkCategoryList, setDrinkCategory] = useState('');\n  const [drinksList, setDrinksList] = useState('');\n  const [filteredFavoritesRecipes, setFilteredFavoritesRecipes] = useState([]);\n  const [filteredRecipesDone, setFilteredRecipesDone] = useState([]);\n  const [foodCategoryList, setFoodCategory] = useState('');\n  const [foodsList, setFoodList] = useState('');\n  const [isFavRecipe, setIsFavRecipe] = useState(false);\n  const [isRecipeDone, setIsRecipeDone] = useState(true);\n  const [inProgressRecipes, setInProgressRecipes] = useState(false);\n  const [login, setLogin] = useState({ email: '', password: '' });\n  const [meal, setMeal] = useState('');\n  const [recomMeal, setRecomMeal] = useState('');\n  const [recomDrink, setRecomDrink] = useState('');\n  const [toggleOn, setToggleOn] = useState(false);\n\n  function checkFavoriteDrink() {\n    const { idDrink } = drink;\n    const favRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    if (!favRecipes) return;\n    const checkedRecipe = favRecipes.some(\n      (recipe) => recipe.id === idDrink,\n    );\n    if (checkedRecipe) setIsFavRecipe(checkedRecipe);\n  }\n\n  function saveFavoriteDrink() {\n    const { idDrink, strAlcoholic, strCategory, strDrink, strDrinkThumb } = drink;\n    let favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    if (!favoriteRecipes) favoriteRecipes = [];\n    const checkIsFavorited = favoriteRecipes.some((recipe) => recipe.id === idDrink);\n    if (checkIsFavorited) {\n      console.log('é verdadeiro');\n      const newFavRecipe = favoriteRecipes.filter((recipe) => recipe.id !== idDrink);\n      localStorage.setItem('favoriteRecipes', JSON.stringify(newFavRecipe));\n      setIsFavRecipe(false);\n    }\n    if (!checkIsFavorited) {\n      const newFavoriteRecipe = [\n        ...favoriteRecipes,\n        {\n          id: idDrink,\n          type: 'bebida',\n          area: '',\n          category: strCategory,\n          alcoholicOrNot: strAlcoholic,\n          name: strDrink,\n          image: strDrinkThumb,\n        },\n      ];\n      localStorage.setItem('favoriteRecipes', JSON.stringify(newFavoriteRecipe));\n      setIsFavRecipe(true);\n    }\n  }\n\n  function saveFavoriteMeal() {\n    const { idMeal, strArea, strCategory, strMeal, strMealThumb } = meal;\n    let favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    if (!favoriteRecipes) favoriteRecipes = [];\n    const checkIsFavorited = favoriteRecipes.some((recipes) => recipes.id === idMeal);\n    if (checkIsFavorited) {\n      const newFavRecipe = favoriteRecipes.filter((recipes) => recipes.id !== idMeal);\n      localStorage.setItem('favoriteRecipes', JSON.stringify(newFavRecipe));\n      setIsFavRecipe(false);\n    }\n    if (!checkIsFavorited) {\n      const newFavoriteRecipe = [\n        ...favoriteRecipes,\n        {\n          id: idMeal,\n          type: 'comida',\n          area: strArea,\n          category: strCategory,\n          alcoholicOrNot: '',\n          name: strMeal,\n          image: strMealThumb,\n        },\n      ];\n      localStorage.setItem('favoriteRecipes', JSON.stringify(newFavoriteRecipe));\n      setIsFavRecipe(true);\n    }\n  }\n\n  function checkFavoriteMeal() {\n    const { idMeal } = meal;\n    const favRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    if (!favRecipes) return;\n    const checkedRecipe = favRecipes.some(\n      (recipe) => recipe.id === idMeal,\n    );\n    if (checkedRecipe) setIsFavRecipe(checkedRecipe);\n  }\n\n  const handleChange = (e) => {\n    const { target } = e;\n    const { name, value } = target;\n    setLogin({ ...login, [name]: value });\n  };\n\n  const handleDisabled = () => {\n    const minLength = 6;\n    const validRegex = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\n    const emailIsValid = validRegex.test(login.email);\n    if (emailIsValid && login.password.length > minLength) {\n      return false;\n    }\n    return true;\n  };\n\n  const data = {\n    bkHeart,\n    checkFavoriteDrink,\n    checkFavoriteMeal,\n    drink,\n    drinksList,\n    drinkCategoryList,\n    email: login.email,\n    filteredFavoritesRecipes,\n    foodCategoryList,\n    foodsList,\n    handleChange,\n    handleDisabled,\n    isFavRecipe,\n    inProgressRecipes,\n    isRecipeDone,\n    meal,\n    filteredRecipesDone,\n    recomDrink,\n    recomMeal,\n    saveFavoriteDrink,\n    saveFavoriteMeal,\n    setDrink,\n    setDrinksList,\n    setDrinkCategory,\n    setFilteredFavoritesRecipes,\n    setFoodCategory,\n    setFoodList,\n    setInProgressRecipes,\n    setIsFavRecipe,\n    setIsRecipeDone,\n    setLogin,\n    setMeal,\n    setFilteredRecipesDone,\n    setRecomDrink,\n    setRecomMeal,\n    setToggleOn,\n    shareIcon,\n    toggleOn,\n    wtHeart,\n  };\n\n  return (\n    <RecipeAppContext.Provider value={ data }>\n      { children }\n    </RecipeAppContext.Provider>\n  );\n}\n\nRecipeAppProvider.propTypes = {\n  children: PropTypes.arrayOf(PropTypes.array),\n}.isRequire;\n\nexport default RecipeAppProvider;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport RecipeAppProvider from './provider/RecipeAppProvider';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename=\"/recipes-app\">\n      <RecipeAppProvider>\n        <App />\n      </RecipeAppProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}